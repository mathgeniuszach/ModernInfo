buildscript {
    repositories {
        maven { url 'https://jitpack.io' }
        maven { url 'https://repo.spongepowered.org/maven' }
        maven { url 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

String tweaker = 'com.mathgeniuszach.moderninfo.mixin.MixinLoader'

version = "1.3"
group = "com.mathgeniuszach.moderninfo"
archivesBaseName = "moderninfo"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"

    def args = [
        "-Dfml.coreMods.load=${tweaker}",
        '-Dmixin.hotSwap=true',
        '-Dmixin.checks.interfaces=true',
        "-XX:-DisableExplicitGC"
    ]
    clientJvmArgs.addAll(args)
    // serverJvmArgs.addAll(args)

    makeObfSourceJar = false
}

// configurations {
//     shade
//     implementation.extendsFrom(shade)

//     runtimeOnly{
//         canBeResolved = true
//     }
// }

repositories {
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
    maven { url 'https://maven.minecraftforge.net/' }
    mavenCentral()
}
dependencies {
    compile('org.spongepowered:mixin:0.6.6-SNAPSHOT') {
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'guava'
        exclude module: 'launchwrapper'
    }
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}

mixin {
    defaultObfuscationEnv notch
    add sourceSets.main, "mixins.${archivesBaseName}.refmap.json"
}

shadowJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    classifier ""
    exclude "LICENSE.txt", "dummyThing"
}

jar {
    manifest.attributes(
        'FMLCorePluginContainsFMLMod': true,
        'ForceLoadAsMod': true,
        'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
        'MixinConfigs': 'mixins.moderninfo.json',
        'FMLCorePlugin': "${tweaker}",
    )
}

tasks.reobfJar.dependsOn(tasks.shadowJar)

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        
        expand(
            'version':project.version,
            'mcversion':project.minecraft.version,
            'archivesBaseName':project.archivesBaseName
        )
    }
    
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier "sources"
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives shadowJar
    archives sourcesJar
}
